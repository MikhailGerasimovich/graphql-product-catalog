version: '3.8'
services:
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - dbnet

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - dbnet

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    command: npm run start:docker gateway
    env_file:
      - ./apps/gateway/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    networks:
      - dbnet

  authorization:
    build:
      context: .
      dockerfile: ./apps/authorization/Dockerfile
    command: npm run start:docker authorization
    env_file:
      - ./apps/authorization/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3001:3001
    networks:
      - dbnet
      - auth_db

  baskets:
    build:
      context: .
      dockerfile: ./apps/baskets/Dockerfile
    command: npm run start:docker baskets
    env_file:
      - ./apps/baskets/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3002:3002
    networks:
      - dbnet
      - basket_db

  catalogs:
    build:
      context: .
      dockerfile: ./apps/catalogs/Dockerfile
    command: npm run start:docker catalogs
    env_file:
      - ./apps/catalogs/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3003:3003
    networks:
      - dbnet
      - command_catalog_db
      - query_catalog_db

  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
    command: npm run start:docker orders
    env_file:
      - ./apps/orders/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3004:3004
    networks:
      - dbnet
      - order_db

  auth_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=auth_db
      - POSTGRES_HOST=auth_db
      - POSTGRES_PORT=5432
    volumes:
      - auth:/var/lib/postgresql/data
    networks:
      - auth_db

  basket_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=basket_db
      - POSTGRES_HOST=basket_db
      - POSTGRES_PORT=5432
    volumes:
      - basket:/var/lib/postgresql/data
    networks:
      - basket_db

  command_catalog_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=command_catalog_db
      - POSTGRES_HOST=command_catalog_db
      - POSTGRES_PORT=5432
    volumes:
      - command_catalog:/var/lib/postgresql/data
    networks:
      - command_catalog_db

  query_catalog_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=query_catalog_db
      - POSTGRES_HOST=query_catalog_db
      - POSTGRES_PORT=5432
    volumes:
      - query_catalog:/var/lib/postgresql/data
    networks:
      - query_catalog_db

  order_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=order_db
      - POSTGRES_HOST=order_db
      - POSTGRES_PORT=5432
    volumes:
      - order:/var/lib/postgresql/data
    networks:
      - order_db

volumes:
  auth:
  basket:
  command_catalog:
  query_catalog:
  order:


networks:
  dbnet:
  auth_db:
  basket_db:
  command_catalog_db:
  query_catalog_db:
  order_db:


