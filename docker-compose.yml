version: '3.8'
services:
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - dbnet

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - dbnet

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    command: npm run start:docker gateway
    env_file:
      - ./apps/gateway/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    networks:
      - dbnet

  authorization:
    build:
      context: .
      dockerfile: ./apps/authorization/Dockerfile
    command: npm run start:docker authorization
    env_file:
      - ./apps/authorization/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3001:3001
    networks:
      - dbnet

  baskets:
    build:
      context: .
      dockerfile: ./apps/baskets/Dockerfile
    command: npm run start:docker baskets
    env_file:
      - ./apps/baskets/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3002:3002
    networks:
      - dbnet

  catalogs:
    build:
      context: .
      dockerfile: ./apps/catalogs/Dockerfile
    command: npm run start:docker catalogs
    env_file:
      - ./apps/catalogs/.envDocker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3003:3003
    networks:
      - dbnet

  auth_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=auth_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5434
    expose:
      - '5434'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5434:5434'
    command:
      - -p 5434
    networks:
      - dbnet

  basket_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=basket_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5435
    expose:
      - '5435'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5435:5435'
    command:
      - -p 5435
    networks:
      - dbnet

  command_catalog_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=command_catalog_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    expose:
      - '5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - dbnet

  query_catalog_db:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=query_catalog_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5433
    expose:
      - '5433'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    command:
      - -p 5433
    networks:
      - dbnet

volumes:
  postgres:


networks:
  dbnet:


